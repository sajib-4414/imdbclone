events { }
http {
    server {
        listen 80;
        server_name localhost;

        location /static/ {
            alias /app/static/;
        }

        location /auth/ {
            # internal;
            proxy_pass http://auth-service:8003/; ##******* YOU NEED THIS TRAILING SLASH, as fastapi paths are / or /api like this
        }

        #opening user service to everyone       
        location /user-service {
            proxy_pass http://user-service:8000; #must use the container's listening port, not the port exposed outside
        }
        
        # # only if user is accessing registration url, then allow unauthenticated
        # location /user-service/api/v1/account/register {
        #     proxy_pass http://user-service:8000;
        # }
        #otherwise even user service's all url is also protected
        # location /user-service {
        #     auth_request /auth/;
        #     proxy_pass http://user-service:8000; #must use the container's listening port, not the port exposed outside
        # }

        location /movie-service/ {
            auth_request /auth/;
            #taking X-Username from auth FastAPI service and storing to $username
            auth_request_set $username  $upstream_http_x_username;
            proxy_pass http://movie-service:8000;#must use the container's listening port, not the port exposed outside
            # Passing to movie service with X-Username as header name, receive in movie
            #service as HTTP_X_USERNAME
            proxy_set_header X-Username $username ;
        }

        # Add other location blocks for additional services as needed.
    }
}